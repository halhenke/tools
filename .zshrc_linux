echo ".zshrc_linux called..."

# ----------------------------------------------------------------------
# THE Z SHELL
# ----------------------------------------------------------------------
# echo "Setting your shell - Bash via MacPorts"
# /opt/local/bin/bash
echo "Your shell is $SHELL and you are running version $ZSH_VERSION"

# This is much more familiar to $BASH and especially getting the PATH to work correctly
setopt shwordsplit

# ZSHELL_COMMANDS=/opt/local/share/zsh/5.0.0/functions
# export PATH=/opt/local/share/zsh/5.0.0/functions:$PATH
# echo "We are adding the zshell commands to your path"

# ----------------------------------------------------------------------
# SETTING COMMAND HISTORY
# ----------------------------------------------------------------------
# export HISTCONTROL=ignoredups
# export HISTFILESIZE=10000

export HISTSIZE=10000
export SAVEHIST=10000
export HISTFILE=~/.zsh_history

setopt INC_APPEND_HISTORY
setopt HIST_IGNORE_DUPS
setopt SHARE_HISTORY

# ----------------------------------------------------------------------
# SETTING UP THE PROMPT
# ----------------------------------------------------------------------
echo "Setting up your prompt: colour"

# Z-Shell Prompt Selection
autoload -U promptinit
promptinit
# Choose a prompt
prompt clint

# ----------------------------------------------------------------------
# Z-SHELL AUTO-COMPLETION
# ----------------------------------------------------------------------
# # Enable the bash-completion port
# echo "enabling bash_completion..."
# if [ -f /opt/local/etc/profile.d/bash_completion.sh ]; then
#     . /opt/local/etc/profile.d/bash_completion.sh
# fi
# # This is currently duplicated in .inputrc - fix
# bind '"\e[A":history-search-backward'
# bind '"\e[B":history-search-forward'

# enable auto-completion
autoload -U compinit
compinit
# "Arrow Key style" Auto-Completion
zstyle ':completion:*' menu select


# ----------------------------------------------------------------------
# Z-SHELL READLINE STYLE STUFF
# ----------------------------------------------------------------------
# create a zkbd compatible hash;
# to add other keys to this hash, see: man 5 terminfo
typeset -A key

key[Home]=${terminfo[khome]}

key[End]=${terminfo[kend]}
key[Insert]=${terminfo[kich1]}
key[Delete]=${terminfo[kdch1]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}

# setup key accordingly
[[ -n "${key[Home]}"    ]]  && bindkey  "${key[Home]}"    beginning-of-line
[[ -n "${key[End]}"     ]]  && bindkey  "${key[End]}"     end-of-line
[[ -n "${key[Insert]}"  ]]  && bindkey  "${key[Insert]}"  overwrite-mode
[[ -n "${key[Delete]}"  ]]  && bindkey  "${key[Delete]}"  delete-char
# [[ -n "${key[Up]}"      ]]  && bindkey  "${key[Up]}"      up-line-or-history
# [[ -n "${key[Down]}"    ]]  && bindkey  "${key[Down]}"    down-line-or-history
[[ -n "${key[Left]}"    ]]  && bindkey  "${key[Left]}"    backward-char
[[ -n "${key[Right]}"   ]]  && bindkey  "${key[Right]}"   forward-char

# [[ -n "${key[PageUp]}"   ]]  && bindkey  "${key[PageUp]}"    history-beginning-search-backward
# [[ -n "${key[PageDown]}" ]]  && bindkey  "${key[PageDown]}"  history-beginning-search-forward
[[ -n "${key[Up]}"   ]]  && bindkey  "${key[Up]}"    history-beginning-search-backward
[[ -n "${key[Down]}" ]]  && bindkey  "${key[Down]}"  history-beginning-search-forward

# Raw keybindings for Super and Alt Escape Sequences
bindkey "^[[1;3D" backward-word     #back word
bindkey "^[[1;3C" forward-word      #back word
bindkey "^[[1;1D" beginning-of-line #beginning of line
bindkey "^[[1;1C" end-of-line       #end of line

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
    function zle-line-init () {
        printf '%s' ${terminfo[smkx]}
    }
    function zle-line-finish () {
        printf '%s' ${terminfo[rmkx]}
    }
    zle -N zle-line-init
    zle -N zle-line-finish
fi
# ----------------------------------------------------------------------

# ----------------------------------------------------------------------
# SOME USEFUL ALIASES
# ----------------------------------------------------------------------
alias ll="ls -lh"
alias la="ls -lah"
# ----------------------------------------------------------------------


# --------------------------------------------
# RVM
# Add a test to make sure we are somewhere we want to use RVM - e.g. jn-dev
# --------------------------------------------------
# echo "doing RVM stuff - loading rvm script..."
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
# --------------------------------------------
# # My attempt to modify
# echo "doing RVM stuff - modifying your PATH..."
# # PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
# export HAL_RVM_PATH=$HOME/.rvm/bin 
# PATH=$PATH:$HAL_RVM_PATH
# --------------------------------------------
